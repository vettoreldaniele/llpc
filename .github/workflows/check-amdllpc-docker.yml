name: LLPC Docker CI

on:
  push:
    branches:
      - '*'
      - '!master'
  pull_request:

jobs:
  build-and-test:
    name: "Features: ${{ matrix.feature-set }}, assertions: ${{ matrix.assertions }}"
    runs-on: ${{ matrix.host-os }}
    strategy:
      fail-fast: false
      matrix:
        host-os:             ["ubuntu-20.04"]
        base-image-template: ["gcr.io/stadia-open-source/amdvlk_%s%s_%s:nightly"]
        config:              [Release]
        assertions:          ["OFF", "ON"]
        feature-set:         ["+gcc", "+clang", "+clang+shadercache", "+clang+sanitizers", "+clang+coverage", "+clang+shadercache+coverage"]
        exclude:
          - feature-set: "+clang"
            assertions:  "OFF"
          - feature-set: "+clang+shadercache"
            assertions:  "ON"
          - feature-set: "+clang+coverage"
            assertions:  "ON"
          - feature-set: "+clang+shadercache+coverage"
            assertions:  "OFF"
    steps:
      - name: Free up disk space
        if: contains(matrix.feature-set, '+sanitizers')
        run: |
          echo 'Before:' && df -h
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/hostedtoolcache/boost /opt/ghc
          echo 'After:' && df -h
      - name: Checkout LLPC
        run: |
          git clone https://github.com/${GITHUB_REPOSITORY}.git .
          git fetch origin +${GITHUB_SHA}:${GITHUB_REF} --update-head-ok
          git checkout ${GITHUB_SHA}
      - name: Generate Docker base image tag string
        run: |
          CONFIG_LOWER=$(echo "${{ matrix.config }}" | tr "[:upper:]" "[:lower:]")
          FEATURES_LOWER=$(echo "${{ matrix.feature-set }}" | tr "+" "_")
          ASSERTS_LOWER=$(echo "${{ matrix.assertions }}" | tr "[:upper:]" "[:lower:]")
          TAG=$(printf "${{ matrix.base-image-template }}" "$CONFIG_LOWER" "$FEATURES_LOWER" "$ASSERTS_LOWER")
          echo "IMAGE_TAG=$TAG" | tee -a $GITHUB_ENV
      - name: Fetch the latest prebuilt AMDVLK
        run: docker pull "$IMAGE_TAG"
      - name: Build and Test with Docker
        run: docker build . --file docker/llpc.Dockerfile
                            --build-arg AMDVLK_IMAGE="$IMAGE_TAG"
                            --build-arg LLPC_REPO_NAME="${GITHUB_REPOSITORY}"
                            --build-arg LLPC_REPO_REF="${GITHUB_REF}"
                            --build-arg LLPC_REPO_SHA="${GITHUB_SHA}"
                            --build-arg FEATURES="${{ matrix.feature-set }}" 
                            --tag llpc/ci-shaderdb
      - name: Upload code coverage report
        if: contains(matrix.feature-set, '+coverage')
        run: |
          gsutil -m cp -r /vulkandriver/coverage_report/* gs://amdvlk-llpc-github-ci-artifacts-public/coverage_${IMAGE_TAG}_${GITHUB_SHA}/
      - name: Add comment with code coverage report link
        if: contains(matrix.feature-set, '+coverage')
        uses: peter-evans/create-or-update-comment@v1.4.5
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            The LLPC code coverage report is available at https://storage.cloud.google.com/amdvlk-llpc-github-ci-artifacts-public/coverage_${IMAGE_TAG}_${GITHUB_SHA}/index.html.

            Configuration: $IMAGE_TAG.
