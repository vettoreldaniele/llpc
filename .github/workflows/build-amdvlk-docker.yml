name: Build AMDVLK for LLPC

on:
  workflow_dispatch:

jobs:
  build-and-push-amdvlk:
    name: "Features: ${{ matrix.feature-set }}, assertions: ${{ matrix.assertions }}"
    runs-on: ${{ matrix.host-os }}
    strategy:
      fail-fast: false
      matrix:
        host-os:        ["ubuntu-20.04"]
        image-template: ["gcr.io/stadia-open-source/amdvlk_%s%s_%s:nightly"]
        branch:         [dev]
        config:         [Release]
        assertions:     ["OFF", "ON"]
        feature-set:    ["+clang+coverage"]
        generator:      [Ninja]
        exclude:
          - feature-set: "+clang+coverage"
            assertions:  "ON"
    steps:
      - name: Checkout LLPC
        run: |
          git clone https://github.com/${GITHUB_REPOSITORY}.git .
          git checkout ${GITHUB_SHA}
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
      - name: Generate Docker image tag string
        run: |
          CONFIG_LOWER=$(echo "${{ matrix.config }}" | tr "[:upper:]" "[:lower:]")
          FEATURES_LOWER=$(echo "${{ matrix.feature-set }}" | tr "+" "_")
          ASSERTS_LOWER=$(echo "${{ matrix.assertions }}" | tr "[:upper:]" "[:lower:]")
          TAG=$(printf "${{ matrix.image-template }}" "$CONFIG_LOWER" "$FEATURES_LOWER" "$ASSERTS_LOWER")
          SIMPLETAG=(printf "amdvlk_%s%s_%s" "$CONFIG_LOWER" "$FEATURES_LOWER" "$ASSERTS_LOWER")
          echo "IMAGE_TAG=$TAG" | tee -a $GITHUB_ENV
          echo "SIMPLE_TAG=$SIMPLETAG" | tee -a $GITHUB_ENV
      - name: Build and Test AMDVLK with Docker
        run: |
          docker build . --file docker/amdvlk.Dockerfile \
                         --build-arg BRANCH="${{ matrix.branch }}" \
                         --build-arg CONFIG="${{ matrix.config }}" \
                         --build-arg ASSERTIONS="${{ matrix.assertions }}" \
                         --build-arg FEATURES="${{ matrix.feature-set }}" \
                         --build-arg GENERATOR="${{ matrix.generator }}" \
                         --tag "$IMAGE_TAG"
      - name: Copy files
        if: contains(matrix.feature-set, '+coverage')
        run: |
          docker run -v "$HOME:/host" "$IMAGE_TAG" 'bash' '-c' 'cp -r /vulkandriver/coverage_report /host/'
      - name: Check files
        if: contains(matrix.feature-set, '+coverage')
        run: |
          ls -l "$HOME"
      - name: Upload code coverage report
        if: contains(matrix.feature-set, '+coverage')
        run: |
          gsutil -m cp -r $HOME/coverage_report/* gs://amdvlk-llpc-github-ci-artifacts-public/coverage_${SIMPLE_TAG}_${GITHUB_SHA}/
